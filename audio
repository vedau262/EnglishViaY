
package com.video.kidvideo;


import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.Context;
import android.content.DialogInterface;
import android.content.DialogInterface.OnKeyListener;
import android.content.Intent;
import android.net.Uri;
import android.text.Html;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.TextView;

public class WarningDialog {
    private final int DIALOG_TYPE_ERROR_CONNECTION = MyConfig.DIALOG_TYPE_ERROR_CONNECTION;
    private final int DIALOG_TYPE_CONFIRM_YES_NO_EXIT = MyConfig.DIALOG_TYPE_CONFIRM_YES_NO_EXIT;

    private Activity _activity;

    public WarningDialog(Activity activity) {
        this._activity = activity;
    }

    public void ShowAlertDialog(int dialogType, int icon, int title, int message, int ButtonYesText, int ButtonNoText) {
        switch (dialogType) {
            case DIALOG_TYPE_ERROR_CONNECTION:
                ShowAlertDialogOk(icon, title, message, ButtonYesText);
                break;
            case DIALOG_TYPE_CONFIRM_YES_NO_EXIT:
                ShowExitAlertDialog(message, ButtonYesText, ButtonNoText);
                break;

            default:
                break;
        }

    }

    public void ShowAlertDialogOk(int icon, int title, int message, int ButtonYesText) {

        // Creating alert Dialog with one Button

        Builder alertDialog = new AlertDialog.Builder(_activity);

        alertDialog.create();
        // Setting Dialog Title
//		alertDialog.setTitle(title);

        // Setting Dialog Message
        alertDialog.setMessage(Html.fromHtml("<font color='#FF7F27'> " + _activity.getResources().getString(message) + "</font>"));

        // Setting Icon to Dialog
//		alertDialog.setIcon(icon);

        // Setting OK Button
        alertDialog.setPositiveButton(_activity.getString(ButtonYesText),
                new DialogInterface.OnClickListener() {
                    public void onClick(final DialogInterface dialog,
                                        final int which) {
                        // Write your code here to execute after dialog closed
//						Base basicActor;
//						basicActor = new Base(_activity);
//						basicActor.DestroyApp();
//						basicActor.ShowToast("------- DestroyApp -------");
                        //_activity.finish();
                        dialog.cancel();

                    }
                })
                .setOnKeyListener(new OnKeyListener() {
                    public boolean onKey(DialogInterface dialog, int keyCode, KeyEvent event) {
                        // TODO Auto-generated method stub
                        if (keyCode == KeyEvent.KEYCODE_BACK && event.getAction() == KeyEvent.ACTION_UP) {
//							Base basicActor;
//							basicActor = new Base(_activity);
//							basicActor.DestroyApp();
                            //_activity.finish();
//							basicActor.ShowToast("------- DestroyApp -------");	
                            dialog.cancel();
                        }
                        return false;
                    }
                })
                .setCancelable(false);

        // Showing Alert Message
        alertDialog.show();
    }

    @SuppressLint("NewApi")
    public void ShowExitAlertDialog(int message, int ButtonYesText, int ButtonNoText) {

        // Creating alert Dialog with one Button

        Builder alertDialog = new AlertDialog.Builder(_activity);
//		Builder alertDialog = new AlertDialog.Builder(_activity, R.style.AlertDialogCustom);
        Context context = _activity.getApplicationContext();
        final TextView dialog_message = new TextView(context);
        dialog_message.setText(message);
        dialog_message.setOnClickListener(new OnClickListener() {

            @Override
            public void onClick(View arg0) {
                // TODO Auto-generated method stub
                Intent in = new Intent(Intent.ACTION_VIEW, Uri.parse(MyConfig.url_more_apps));
                in.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                _activity.startActivity(in);
            }
        });
        alertDialog.create();
        // Setting Dialog Title
//        alertDialog.setTitle(Html.fromHtml("<font color='#FF7F27'> " + _activity.getResources().getString(R.string.Alert_Exit_Title) + "</font>"));

        // Setting Dialog Message
        //remove
        alertDialog.setMessage(Html.fromHtml("<font color='#FF7F27'> " + _activity.getResources().getString(message) + "</font>"));

        // Setting Icon to Dialog
        //alertDialog.setIcon(icon);

        // Setting OK Button
        alertDialog.setPositiveButton(ButtonYesText,
                new DialogInterface.OnClickListener() {
                    public void onClick(final DialogInterface dialog,
                                        final int which) {
                        // Write your code here to execute after dialog closed//
//						basicActor.ShowToast("------- DestroyApp -------");
                        MyConfig.resetConfig();
                        _activity.finish();
//						dialog.cancel();

                    }
                })
                .setNegativeButton(ButtonNoText,
                        new DialogInterface.OnClickListener() {
                            public void onClick(DialogInterface dialog, int id) {
                                dialog.cancel();
                            }
                        })
                .setOnKeyListener(new OnKeyListener() {
                    public boolean onKey(DialogInterface dialog, int keyCode, KeyEvent event) {
                        // TODO Auto-generated method stub
                        if (keyCode == KeyEvent.KEYCODE_BACK && event.getAction() == KeyEvent.ACTION_UP) {
//							Base basicActor;
//							basicActor = new Base(_activity);
//							basicActor.DestroyApp();
                            //_activity.finish();
//							basicActor.ShowToast("------- DestroyApp -------");	
                            dialog.cancel();
                        }
                        return false;
                    }
                })
                .setCancelable(false);

        // Showing Alert Message
        alertDialog.show();
    }

}

